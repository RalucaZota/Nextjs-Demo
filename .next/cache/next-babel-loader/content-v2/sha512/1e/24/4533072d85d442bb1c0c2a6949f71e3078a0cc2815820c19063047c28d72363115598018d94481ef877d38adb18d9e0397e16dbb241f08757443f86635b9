{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\REACT\\\\nextjsproject\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nexport default function MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n    title: \"First meetup\",\n    address: \"some street, some city\",\n    description: \"This is a hhhhhfirst meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\nexport async function getStaticPaths() {\n  return {\n    //fallback: false - to indicate that I defined all supported paths\n    fallback: false,\n    paths: [{\n      params: {\n        meetupId: \"m1\"\n      }\n    }, {\n      params: {\n        meetupId: \"m2\"\n      }\n    }]\n  };\n} //getSttaicPaths-returns an obj all the dynamic segment values all the meetups id s for which this page should be pre generated- this obj contains a array of paths which has an obj per version of the dynamic page-obj has a params key-which then itself is an obj with all the key values pairs that might lead to your dynamic page/our meetupId with the concrete value 'm1' for the meetupId for which this page should be pre generated\n\nexport async function getStaticProps(context) {\n  //fetch data for a single meeetup\n  const meetupId = context.params.meetupId;\n  console.log(meetupId); //that will be an obj where our identifiers bet the square brackets will be properties and the values will be the actual values encoded in the url/meetupId-the identifier that we chose\n\n  return {\n    props: {\n      meetupData: {\n        image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n        id: meetupId,\n        title: \"First meetup\",\n        address: \"some street, some city\",\n        description: \"This is a first meetup\"\n      }\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/REACT/nextjsproject/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetail","MeetupDetails","getStaticPaths","fallback","paths","params","meetupId","getStaticProps","context","console","log","props","meetupData","image","id","title","address","description"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,eAAe,SAASC,aAAT,GAAyB;AACtC,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,wHADR;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,OAAO,EAAC,wBAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;AACD,OAAO,eAAeC,cAAf,GAAgC;AACrC,SAAO;AACL;AACAC,IAAAA,QAAQ,EAAE,KAFL;AAGLC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE;AADJ;AADV,KADK,EAML;AACED,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE;AADJ;AADV,KANK;AAHF,GAAP;AAgBD,C,CACD;;AACA,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA,QAAMF,QAAQ,GAAGE,OAAO,CAACH,MAAR,CAAeC,QAAhC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EAH4C,CAI5C;;AACA,SAAO;AACLK,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EACH,wHAFQ;AAGVC,QAAAA,EAAE,EAAER,QAHM;AAIVS,QAAAA,KAAK,EAAE,cAJG;AAKVC,QAAAA,OAAO,EAAE,wBALC;AAMVC,QAAAA,WAAW,EAAE;AANH;AADP;AADF,GAAP;AAYD","sourcesContent":["import { Fragment } from \"react\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nexport default function MeetupDetails() {\r\n  return (\r\n    <MeetupDetail\r\n      image=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\"\r\n      title=\"First meetup\"\r\n      address=\"some street, some city\"\r\n      description=\"This is a hhhhhfirst meetup\"\r\n    />\r\n  );\r\n}\r\nexport async function getStaticPaths() {\r\n  return {\r\n    //fallback: false - to indicate that I defined all supported paths\r\n    fallback: false,\r\n    paths: [\r\n      {\r\n        params: {\r\n          meetupId: \"m1\",\r\n        },\r\n      },\r\n      {\r\n        params: {\r\n          meetupId: \"m2\",\r\n        },\r\n      },\r\n    ],\r\n  };\r\n}\r\n//getSttaicPaths-returns an obj all the dynamic segment values all the meetups id s for which this page should be pre generated- this obj contains a array of paths which has an obj per version of the dynamic page-obj has a params key-which then itself is an obj with all the key values pairs that might lead to your dynamic page/our meetupId with the concrete value 'm1' for the meetupId for which this page should be pre generated\r\nexport async function getStaticProps(context) {\r\n  //fetch data for a single meeetup\r\n  const meetupId = context.params.meetupId;\r\n  console.log(meetupId);\r\n  //that will be an obj where our identifiers bet the square brackets will be properties and the values will be the actual values encoded in the url/meetupId-the identifier that we chose\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        image:\r\n          \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\r\n        id: meetupId,\r\n        title: \"First meetup\",\r\n        address: \"some street, some city\",\r\n        description: \"This is a first meetup\",\r\n      },\r\n    },\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}