{"ast":null,"code":"import { MongoClient } from \"mongodb\"; // /api/new-meetup\n//POST/api/new-meetup\n\nexport default async function handler(req, res) {\n  try {\n    if (req.method === \"POST\") {\n      const data = req.body; //-request m allows us to find out which kind of request was sent\n      // -we can get our data by accessing req.body(body of incoming req-data of incoming req)\n      // -this is the endpoint of creating new meetup\n      // const { title, image, address, description } = data;\n\n      const client = await MongoClient.connect(\"mongodb+srv://lorena99:lorena99@cluster0.mbklnlh.mongodb.net/meetups?retryWrites=true&w=majority\");\n      const db = client.db();\n      const meetupsCollection = db.collection(\"meetups\");\n      const result = await meetupsCollection.insertOne(data);\n      console.log(result);\n\n      if (!result.ok) {\n        throw new Error(\"Smth went wrong\");\n      }\n    } //on the client obj we can add a db m, to get hold of the database to which we re connecting with\n    //Mongodb is a Nosql database that works with collections full of documents/collections would be kind of tables in a Sql database and documents would be your entries in those tables/ a single meetup would be a single doc\n    //InserOne m- built in command for inserting one new doc into this collection\n    //result will be an obj, with for ex automatically generated id\n\n  } catch (error) {\n    console.log(error);\n  }\n\n  client.close();\n  res.status(201).json({\n    message: \"Meetup inserted successfully\"\n  }); //to set a http status code after the response whoch will be returned\n  //to close the databse connection once we re done and then we need to use the res obj to send back a res, cause we re getting a request, storing the data in the database, ultimetly we also need to send back a resp then\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/REACT/nextjsproject/pages/api/new-meetup.js"],"names":["MongoClient","handler","req","res","method","data","body","client","connect","db","meetupsCollection","collection","result","insertOne","console","log","ok","Error","error","close","status","json","message"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B,C,CACA;AACA;;AAEA,eAAe,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC9C,MAAI;AACF,QAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,YAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB,CADyB,CAEzB;AACA;AACA;AACA;;AACA,YAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CACnB,kGADmB,CAArB;AAGA,YAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,YAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,YAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,SAAlB,CAA4BR,IAA5B,CAArB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AACA,UAAI,CAACA,MAAM,CAACI,EAAZ,EAAgB;AACd,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;AACF,KAjBC,CAkBF;AACA;AACA;AACA;;AACD,GAtBD,CAsBE,OAAOC,KAAP,EAAc;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD;;AACDX,EAAAA,MAAM,CAACY,KAAP;AACAhB,EAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAArB,EA3B8C,CA4B9C;AACA;AACD","sourcesContent":["import { MongoClient } from \"mongodb\";\r\n// /api/new-meetup\r\n//POST/api/new-meetup\r\n\r\nexport default async function handler(req, res) {\r\n  try {\r\n    if (req.method === \"POST\") {\r\n      const data = req.body;\r\n      //-request m allows us to find out which kind of request was sent\r\n      // -we can get our data by accessing req.body(body of incoming req-data of incoming req)\r\n      // -this is the endpoint of creating new meetup\r\n      // const { title, image, address, description } = data;\r\n      const client = await MongoClient.connect(\r\n        \"mongodb+srv://lorena99:lorena99@cluster0.mbklnlh.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n      );\r\n      const db = client.db();\r\n      const meetupsCollection = db.collection(\"meetups\");\r\n      const result = await meetupsCollection.insertOne(data);\r\n      console.log(result);\r\n      if (!result.ok) {\r\n        throw new Error(\"Smth went wrong\");\r\n      }\r\n    }\r\n    //on the client obj we can add a db m, to get hold of the database to which we re connecting with\r\n    //Mongodb is a Nosql database that works with collections full of documents/collections would be kind of tables in a Sql database and documents would be your entries in those tables/ a single meetup would be a single doc\r\n    //InserOne m- built in command for inserting one new doc into this collection\r\n    //result will be an obj, with for ex automatically generated id\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  client.close();\r\n  res.status(201).json({ message: \"Meetup inserted successfully\" });\r\n  //to set a http status code after the response whoch will be returned\r\n  //to close the databse connection once we re done and then we need to use the res obj to send back a res, cause we re getting a request, storing the data in the database, ultimetly we also need to send back a resp then\r\n}\r\n"]},"metadata":{},"sourceType":"module"}